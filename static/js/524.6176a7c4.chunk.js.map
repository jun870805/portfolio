{"version":3,"file":"static/js/524.6176a7c4.chunk.js","mappings":"8LAKaA,EAAkDC,EAAAA,GCJ/D,EAA4B,4B,oBCEfC,EAAwB,SAACC,GACpC,IAAMC,EAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAsB,EACzD,MAAM,GAAN,QAAUC,EAAAA,EAAAA,MAAoB,YAAIJ,EAAU,aAAIK,EAAAA,EAAAA,MAAY,YAAIN,EAClE,E,SCkBA,EAlBiB,WACf,IAAMO,GHH4BC,EAAAA,EAAAA,MGI1BC,EAAiBZ,EAAea,EAAAA,IAAhCD,aAOR,OALAE,EAAAA,EAAAA,YAAU,WAERJ,GAASK,EAAAA,EAAAA,IADM,CAAC,GAElB,GAAG,KAGD,gBAAKC,UAAWC,EAAiB,SAC9BL,EAAaM,KAAI,SAACf,GAAI,OACrB,gBAAKgB,IAAKjB,EAAsBC,EAAKiB,OAAYjB,EAAKiB,KAAY,KAI1E,C","sources":["app/hooks.ts","webpack://personal_website/./src/pages/Projects/index.module.scss?d9ec","utils/GetRepoImage.tsx","pages/Projects/index.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Projects_container__1WWQk\"};","// import axios from 'axios'\nimport { githubOpenGraphURL, githubUser } from '../api'\n\nexport const getRepositoryImageUrl = (repo: string) => {\n  const hashNumber = Math.floor(Math.random() * 1000000) + 1\n  return `${githubOpenGraphURL()}/${hashNumber}/${githubUser()}/${repo}`\n}\n","import React, { useEffect } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport styles from './index.module.scss'\nimport { getProjectRepositories, project } from '../../slices/projectSlice'\nimport { getRepositoryImageUrl } from '../../utils/GetRepoImage'\n\nconst Projects = () => {\n  const dispatch = useAppDispatch()\n  const { repositories } = useAppSelector(project)\n\n  useEffect(() => {\n    const params = {}\n    dispatch(getProjectRepositories(params))\n  }, [])\n\n  return (\n    <div className={styles.container}>\n      {repositories.map((repo) => (\n        <img src={getRepositoryImageUrl(repo.name)} key={repo.name}></img>\n      ))}\n    </div>\n  )\n}\n\nexport default Projects\n"],"names":["useAppSelector","useSelector","getRepositoryImageUrl","repo","hashNumber","Math","floor","random","githubOpenGraphURL","githubUser","dispatch","useDispatch","repositories","project","useEffect","getProjectRepositories","className","styles","map","src","name"],"sourceRoot":""}